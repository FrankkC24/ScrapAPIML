{"version":3,"file":"getMLCID.js","sourceRoot":"","sources":["../../src/modules/getMLCID.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAA0B;AAC1B,iDAAmC;AACnC,4CAAoB;AAEpB,MAAM,OAAO,GAAG,gCAAgC,CAAC;AAE1C,MAAM,QAAQ,GAAG,KAAK,EAAE,KAAa,EAAwB,EAAE;IAEpE,IAAI,CAAC;QACH,IAAI,cAAc,GAAG,KAAK,CAAC;QAE3B,IAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;YACzB,cAAc,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAEtC,MAAM,MAAM,GAAG,EAAC,KAAK,EAAE,cAAc,EAAC,CAAC;QACvC,YAAE,CAAC,aAAa,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QAEjE,IAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;YACzB,OAAO,cAAc,CAAC;QAExB,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,CAAC;QACrC,MAAM,QAAQ,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAEtC,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,KAAK,EAAE,cAAc,EAAE,KAAK,EAAC,CAAC,CAAC;QAE/E,IAAI,OAAO,CAAC;QACZ,MAAM,OAAO,GAAG,CAAC,CAAC,qCAAqC,CAAC,CAAC;QAEzD,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;YACpB,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEpC,IAAI,OAAO,EAAE,CAAC;YACZ,MAAM,KAAK,GAAG,aAAa,CAAC;YAC5B,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEvC,IAAI,UAAU;gBACZ,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC;QAED,OAAO,cAAc,CAAC;IAExB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC;IACd,CAAC;AAEH,CAAC,CAAC;AAxCW,QAAA,QAAQ,YAwCnB","sourcesContent":["import axios from 'axios';\r\nimport * as cheerio from 'cheerio';\r\nimport fs from 'fs';\r\n\r\nconst baseURL = 'https://www.mercadolibre.cl/p/';  \r\n\r\nexport const getMLCID = async (mlcID: string): Promise<string|null> => {\r\n\r\n  try {\r\n    let formattedMLCID = mlcID;\r\n    \r\n    if(mlcID.startsWith('MLC-'))  \r\n      formattedMLCID = mlcID.substring(4);\r\n\r\n    const result = {MLCID: formattedMLCID};\r\n    fs.writeFileSync('result.json', JSON.stringify(result, null, 2));\r\n\r\n    if(mlcID.startsWith('MLC-'))\r\n      return formattedMLCID;\r\n\r\n    const url = baseURL + formattedMLCID;  \r\n    const response = await axios.get(url);\r\n\r\n    const $ = cheerio.load(response.data, {xmlMode: false, decodeEntities: false});\r\n\r\n    let content;\r\n    const metaTag = $('meta[name=\"twitter:app:url:iphone\"]');\r\n    \r\n    if (metaTag.length > 0)  \r\n      content = metaTag.attr('content');\r\n\r\n    if (content) {  \r\n      const regex = /id=MLC(\\d+)/;\r\n      const mlcidMatch = regex.exec(content);\r\n\r\n      if (mlcidMatch) \r\n        return mlcidMatch[1];\r\n    }\r\n\r\n    return formattedMLCID;\r\n\r\n  } catch (error) {\r\n    console.error('Error buscando MLCID', error);\r\n    return null;  \r\n  }\r\n\r\n};"]}